import { h } from 'preact';
import styles from './Button.module.css';
import { colors } from '../../Colors';
import { ThemeContext } from '../../Theme';

export const Button = ({
  loading = false,
  disabled = false, // Add this parameter
  children,
  size = "lg",
  variant = "primary",
  onClick
}) => {
  let padding, fontSize;
  switch (size) {
    case 'sm':
      padding = '8px 16px';
      fontSize = '14px';
      break;
    case 'md':
      padding = '12px 16px';
      fontSize = '16px';
      break;
    case 'lg':
    default:
      padding = '15px 32px';
      fontSize = '16px';
      break;
  }

  return (
    <ThemeContext.Consumer>
      {({ theme }) => {
        console.log(theme, 'theme bro', theme.text)
        return (
          (
            <label 
              onClick={disabled ? () => {} : onClick} // Disable onClick if the button is disabled
              className={`${styles.customButton} ${loading || disabled ? styles.disabled : ''}`} // Apply the disabled class if loading or disabled
              style={{
                padding: padding,
                fontSize: fontSize,
                color: variant === "primary" ? "white" : theme.brightBlue,
                background: variant === "primary" ? theme.brightBlue : theme.lightBlue
              }}
            >
              {children}
            </label>
          )
        )
      }}
    </ThemeContext.Consumer>
  )

};