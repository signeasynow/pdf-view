import { h } from 'preact';
import { useEffect, useRef, useState } from 'preact/hooks';
import styles from './Dropdown.module.css';

function listenForOutsideClicks(listening, setListening, menuRef, setIsOpen) {
	return () => {
		if (listening) return;
		if (!menuRef.current) return;
		setListening(true);
		[`click`, `touchstart`].forEach((type) => {
			document.addEventListener(`click`, (evt) => {
				if (menuRef.current.contains(evt.target)) return;
				setIsOpen(false);
			});
		});
	};
}

export const Dropdown = ({ title, child, marginTop }) => {
	const [isOpen, setIsOpen] = useState(false);

	const childClick = (e) => {
		e.stopPropagation();
		setIsOpen(false);
		// perform the action for child click
	};

	const [listening, setListening] = useState(false);

	const dropdownRef = useRef(null);

	useEffect(listenForOutsideClicks(
		listening,
		setListening,
		dropdownRef,
		setIsOpen
	));

	return (
		<div style={{ zIndex: 9999 }} class={styles.styleRefresh} ref={dropdownRef}>
			<div class={styles.styleRefresh} onClick={() => setIsOpen(!isOpen)}>
				{title}
				<div onClick={childClick} class={isOpen ? styles.dropdownVisible : styles.dropdownContent} style={{
					marginTop: marginTop || 48
				}}
				>
					{child}
				</div>
			</div>
		</div>
	);
};
